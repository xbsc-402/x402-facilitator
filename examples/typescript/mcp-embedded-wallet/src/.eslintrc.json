{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:jsdoc/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:css-modules/recommended"
  ],
  "plugins": ["@typescript-eslint", "prettier", "import", "unused-imports", "css-modules"],
  "env": {
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "rules": {
    "multiline-comment-style": ["error", "starred-block"],
    "prettier/prettier": "error",
    "@typescript-eslint/member-ordering": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          ["parent", "sibling"],
          "index",
          "object",
          "type"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],

    // Unused imports rules
    "no-unused-vars": "off", // Turned off as unused-imports/no-unused-vars will handle this
    "@typescript-eslint/no-unused-vars": "off", // Turned off as unused-imports/no-unused-vars will handle this
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_"
      }
    ]
  },
  "overrides": [
    {
      "files": ["src/index.ts"],
      "rules": {
        "no-restricted-syntax": [
          "error",
          {
            "selector": "ExportAllDeclaration",
            "message": "Export * statements are not allowed. Use named exports instead."
          }
        ]
      }
    }
  ],
  "ignorePatterns": [
    "**/*.test.tsx",
    "**/*.test.ts"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    },
    "typescript": {
      "project": "./tsconfig.json"
    }
  }
}
