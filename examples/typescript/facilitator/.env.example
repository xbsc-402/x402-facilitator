# ========================================
# X402 Facilitator Configuration
# ========================================

# Port configuration
PORT=3000

# ========================================
# Blockchain Configuration
# ========================================

# EVM Private Key (Required for BSC support)
EVM_PRIVATE_KEY=your_evm_private_key_here

# SVM Private Key (Optional - for Solana support)
SVM_PRIVATE_KEY=

# Solana RPC URL (Optional - custom RPC endpoint)
SVM_RPC_URL=

# ========================================
# Redis Configuration
# ========================================

# Redis connection URL (Required for Nonce Manager and Mempool)
# Format: redis://[username:password@]host[:port][/db-number]
# Example: redis://localhost:6379
# Example with auth: redis://user:password@redis.example.com:6379/0
REDIS_URL=redis://localhost:6379

# ========================================
# PostgreSQL Database Configuration
# ========================================

# PostgreSQL connection URL (Required for transaction persistence)
# Format: postgresql://[user[:password]@][netloc][:port][/dbname][?param1=value1&...]
# Example: postgresql://user:password@localhost:5432/x402
DATABASE_URL=postgresql://user:password@localhost:5432/x402

# ========================================
# Service Feature Flags
# ========================================

# Enable Nonce Manager for EVM replay protection (default: true)
ENABLE_NONCE_MANAGER=true

# Enable Transaction Mempool for queue processing (default: true)
ENABLE_MEMPOOL=true

# ========================================
# Performance Configuration
# ========================================

# Maximum concurrent verification requests (default: 10)
MAX_CONCURRENT_REQUESTS=10

# ========================================
# Mempool Capacity Management
# ========================================

# Cache TTL for on-chain data queries in seconds (default: 10)
# Controls how long to cache remaining mintable amount from blockchain
CHAIN_DATA_CACHE_TTL=10

# Mempool capacity check is always enabled
# The system will extract the token address from each request's asset field
# and query the blockchain for that token's remaining mintable amount
# New requests will be rejected when active transactions >= remaining capacity

# ========================================
# Example Production Configuration
# ========================================
# Uncomment and modify for production deployment:

# Production Redis (Aliyun Redis example)
# REDIS_URL=redis://r-xxxxxxxxxxxx.redis.japan.rds.aliyuncs.com:6379

# Production PostgreSQL (Aliyun RDS example)
# DATABASE_URL=postgresql://username:password@pgm-xxxxxxxxxxxx.rwlb.japan.rds.aliyuncs.com:5432/x402

# Production feature flags
# ENABLE_NONCE_MANAGER=true
# ENABLE_MEMPOOL=true
# MAX_CONCURRENT_REQUESTS=20